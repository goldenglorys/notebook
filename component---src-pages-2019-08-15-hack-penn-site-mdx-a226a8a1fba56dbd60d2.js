(self.webpackChunk_goldenglorys_notebook=self.webpackChunk_goldenglorys_notebook||[]).push([[8595],{5685:function(e,t,n){"use strict";n.r(t),n.d(t,{_frontmatter:function(){return i},default:function(){return s}});var a=n(9756),o=(n(7294),n(4983)),i={},r={_frontmatter:i};function s(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",null,"Hack Pennsylvania site"),(0,o.kt)("p",null,"Though the event ran last January, Hack Pennsylvania is one of the things I'm most proud of. I wanted there to be a nice recap of the event online, so I made it: ",(0,o.kt)("a",{parentName:"p",href:"https://hackpenn.com"},(0,o.kt)("strong",{parentName:"a"},"hackpenn.com"))),(0,o.kt)("h2",null,"Behind the scenes"),(0,o.kt)("p",null,"The site is built using Next.js + MDX + Theme UI, with Rebass + Emotion. Breaking it down:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Next.js is the framework that bundles & serves the site. ",(0,o.kt)("a",{parentName:"li",href:"https://nextjs.org/"},"https://nextjs.org/")),(0,o.kt)("li",{parentName:"ul"},"MDX is a technology for Markdown <-> React. It lets you use React components directly inside Markdown, & vice versa. ",(0,o.kt)("a",{parentName:"li",href:"https://mdxjs.com/"},"https://mdxjs.com/")),(0,o.kt)("li",{parentName:"ul"},"Theme UI is a new React library for making themeable React apps. ",(0,o.kt)("a",{parentName:"li",href:"https://theme-ui.com/"},"https://theme-ui.com/")),(0,o.kt)("li",{parentName:"ul"},"Rebass is a React component library wrapping Theme UI. It exposes components like ",(0,o.kt)("inlineCode",{parentName:"li"},"<Text />")," for styling. ",(0,o.kt)("a",{parentName:"li",href:"https://rebassjs.org/"},"https://rebassjs.org/")),(0,o.kt)("li",{parentName:"ul"},'Emotion is the "backend" of rendering the CSS-in-JS from Theme UI/Rebass. ',(0,o.kt)("a",{parentName:"li",href:"https://emotion.sh/"},"https://emotion.sh/")),(0,o.kt)("li",{parentName:"ul"},"The site is deployed on Netlify. Since the site has no dynamic content, it can be statically exported, so Netlify generates a folder of HTML & JS files when I push to GitHub it's then serving via CDN. Next.js automatically detects static vs dynamic pages & builds appropriately.")),(0,o.kt)("p",null,"So all the content of the site is written in standard Markdown, with a sprinkling of React components wrapping parts of the site like the top banner, grid of people, etc with special styling."),(0,o.kt)("p",null,"Here’s an example of MDX:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdx"},"<Banner>\n\n# Hack Pennsylvania\n\nWrite text here\n\n</Banner>\n")),(0,o.kt)("p",null,"Then in a JS file, define the component:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const Banner = props => (\n  <Box\n    {...props}\n    sx={{\n      h1: {\n        color: 'primary'\n      },\n      p: {\n        fontFamily: 'mono'\n      }\n    }}\n  />\n)\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Box")," component is coming from Rebass—it's actually just a ",(0,o.kt)("inlineCode",{parentName:"p"},"<div>")," with Theme UI ",(0,o.kt)("a",{parentName:"p",href:"https://theme-ui.com/jsx-pragma"},"magic")," applied. Everything inside ",(0,o.kt)("a",{parentName:"p",href:"https://theme-ui.com/sx-prop"},"the ",(0,o.kt)("inlineCode",{parentName:"a"},"sx")," prop")," is running via Theme UI. The ",(0,o.kt)("inlineCode",{parentName:"p"},"{...props}")," forwards on all the other props passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"Banner"),"—which include the Markdown content, via ",(0,o.kt)("inlineCode",{parentName:"p"},"children"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"primary")," color & the ",(0,o.kt)("inlineCode",{parentName:"p"},"mono")," font family are coming from a global theme. You can define multiple color modes, like the dark theme, & use a React Hook on any component to get the current colors based on the color mode or control the current mode. When you use ",(0,o.kt)("inlineCode",{parentName:"p"},"color")," & ",(0,o.kt)("inlineCode",{parentName:"p"},"bg")," inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"sx")," prop, Theme UI automatically applies the correct color for the mode. A basic theme could look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  fonts: {\n    body: 'system-ui, sans-serif',\n    mono: 'Menlo, monospace'\n  },\n  initialColorMode: 'light',\n  colors: {\n    text: '#123',\n    background: '#fff',\n    primary: '#f03',\n    modes: {\n      dark: {\n        text: '#fff',\n        background: '#000',\n        primary: '#0ef'\n      }\n    }\n  }\n}\n")),(0,o.kt)("p",null,"If you've used ",(0,o.kt)("a",{parentName:"p",href:"https://styled-system.com"},"Styled System")," before (also by the brilliant ",(0,o.kt)("a",{parentName:"p",href:"https://jxnblk.com"},"@jxnblk"),"), you're familiar with the idea of themes & scales for whitespace, color, etc. Theme UI takes that to the next level by allowing props you're used to from Styled System (included in the ",(0,o.kt)("a",{parentName:"p",href:"https://design.hackclub.com"},"Hack Club Design System"),") like ",(0,o.kt)("inlineCode",{parentName:"p"},"py")," & ",(0,o.kt)("inlineCode",{parentName:"p"},"bg")," right alongside full CSS-in-JS, with full support for psuedoselectors, complex selectors, nesting, & more, via Emotion. I wrote some rambling thoughts on Theme UI & the ",(0,o.kt)("inlineCode",{parentName:"p"},"sx")," prop ",(0,o.kt)("a",{parentName:"p",href:"/2019-08-14"},"yesterday"),", if you're interested. ",(0,o.kt)("em",{parentName:"p"},"TLDR, Theme UI is brilliant.")),(0,o.kt)("p",null,"(This isn't a great explanation & there's a lot more to Theme UI than this. If you'd be interested in more writing from me on using Theme UI, let me know!)"),(0,o.kt)("h2",null,"The goods are on Glitch"),(0,o.kt)("p",null,"I developed the site 100% on ",(0,o.kt)("a",{parentName:"p",href:"https://glitch.com"},"Glitch"),", without setting it up locally. Big fan. ",(0,o.kt)("a",{parentName:"p",href:"https://glitch.com/~hackpenn"},"https://glitch.com/~hackpenn")),(0,o.kt)("p",null,"If you want to set up a site with the same basic tech stack, remix my starter project here: ",(0,o.kt)("a",{parentName:"p",href:"https://glitch.com/~next-mdx-rebass-theme-ui"},"https://glitch.com/~next-mdx-rebass-theme-ui")),(0,o.kt)("p",null,"If you want to see all the code for the site in one place, check out ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/hackpenn/site/commit/5f55ae915a6e4762d8e2641383000f5770960e49#diff-63823233e264ed6abbcc6f7ea0ef10bd"},"this file first"),", then scroll up through the rest."),(0,o.kt)("p",null,"If you want to see more projects from Hack Pennsylvania, I've put a few in ",(0,o.kt)("a",{parentName:"p",href:"https://glitch.com/@lachlanjc/hack-pennsylvania"},"a Collection on Glitch"),"."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Questions/feedback? Email me: ",(0,o.kt)("a",{parentName:"p",href:"mailto:lachlan@hackpenn.com"},"lachlan@hackpenn.com")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-2019-08-15-hack-penn-site-mdx-a226a8a1fba56dbd60d2.js.map