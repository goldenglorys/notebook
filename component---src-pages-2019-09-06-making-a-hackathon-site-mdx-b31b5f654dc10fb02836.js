(self.webpackChunk_goldenglorys_notebook=self.webpackChunk_goldenglorys_notebook||[]).push([[8555],{1759:function(e,t,o){"use strict";o.r(t),o.d(t,{_frontmatter:function(){return l},default:function(){return r}});var a=o(9756),n=(o(7294),o(4983)),i=o(4311),l={},s={_frontmatter:l};function r(e){var t=e.components,o=(0,a.Z)(e,["components"]);return(0,n.kt)("wrapper",Object.assign({},s,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",null,"Making a hackathon website with Next.js, MDX, & Theme UI"),(0,n.kt)("p",null,"Recently, I kickstarted the website for ",(0,n.kt)("a",{parentName:"p",href:"https://angelhacks.org"},"AngelHacks"),". Soon afterward, someone in the ",(0,n.kt)("a",{parentName:"p",href:"https://hackclub.com/community/"},"Hack Club Slack")," needed to build a site for their hackathon, & was wondering how to do it. I’m publishing this so anyone else can take advantage, too!"),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Hackathon sites I’ve designed (you’ll notice some patterns!):"),(0,n.kt)(i.Mc,{mdxType:"LinkList"},(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://angelhacks.org"},"AngelHacks")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://2019.windyhacks.com"},"Windy City Hacks")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://2019.hackpenn.com"},"Hack Pennsylvania")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://hackhappyvalley.com"},"Hack Happy Valley")))),(0,n.kt)("p",null,"They’re all open source on GitHub if you want to peruse the source code. The last 3 use Gatsby + ",(0,n.kt)("a",{parentName:"p",href:"https://design.hackclub.com"},"Hack Club Design System"),", which is not an easy stack to get started with, & honestly not one I’d recommend to anyone else. The MDX stack, however, is absolutely incredible to work with. ",(0,n.kt)("a",{parentName:"p",href:"https://notebook.lachlanjc.me/2019-09-06_my_websites_look_the_same/"},"I’ve made a few sites")," like this."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Before we continue, hats off to ",(0,n.kt)("a",{parentName:"p",href:"https://jxnblk.com"},"@jxnblk")," & friends. His design & code & philosophy are a massive inspiration to my work every day. He wrote many of the libraries & directly inspired much of this.")),(0,n.kt)("hr",null),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Note: I also published this section identically as a ",(0,n.kt)("a",{parentName:"em",href:"https://notebook.lachlanjc.me/2019-09-06_explaining_next_mdx_theme_ui/"},"separate post"),".")),(0,n.kt)("h2",null,"Tech stack lowdown"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"We’re using the ",(0,n.kt)("a",{parentName:"li",href:"https://nextjs.org/"},"Next.js")," framework. React is just a library you can run on a webpage—Next makes it easy to build a full, multi-page site (either with dynamic server components or a static site, like these are), handling asset bundling, routing, etc.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Next is wildly easy to get started with, & once you’ve got a site, you can add a new page just by making a file at ",(0,n.kt)("inlineCode",{parentName:"li"},"pages/about.mdx")," with some text in it, & you now have a high-performance static page at ",(0,n.kt)("inlineCode",{parentName:"li"},"/about")," on your site. This is ",(0,n.kt)("em",{parentName:"li"},"magical"),"."))),(0,n.kt)("li",{parentName:"ol"},"We’re using ",(0,n.kt)("a",{parentName:"li",href:"https://mdxjs.com"},"MDX")," to write content. It’s Markdown with superpowers: all the normal Markdown stuff works, but then you can also embed React components inside your text (great for styling, adding forms, etc!), or include other MDX files as React components ",(0,n.kt)("em",{parentName:"li"},"in other MDX files"),". It makes authoring pages super easy, because suddenly you only have to write code if you want custom styling on your page, not just to get text on the screen."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://theme-ui.com"},"Theme UI")," handles styling, with ",(0,n.kt)("a",{parentName:"li",href:"https://emotion.sh"},"Emotion")," underneath & ",(0,n.kt)("a",{parentName:"li",href:"https://rebassjs.org"},"Rebass")," on top. Breaking this down: Emotion handles dynamically generating the actual CSS based on which components are on each page. Theme UI is the library that lets you use themes (e.g. dark & light modes) & provides a really nice API for styling React/MDX components. Rebass is a library on top with pre-made Theme UI components, for using CSS Flexbox, or adding buttons or form elements with basic styling applied.")),(0,n.kt)("p",null,"The site is then hosted on ",(0,n.kt)("a",{parentName:"p",href:"https://netlify.com"},"Netlify"),", because it’s free, easy to set up, automatically deploys whenever you push to GitHub, & ",(0,n.kt)("em",{parentName:"p"},"just works")," (most of the time)."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Update 2020-01-07:")," I recommend switching Rebass to ",(0,n.kt)("a",{parentName:"p",href:"http://theme-ui.com/components"},(0,n.kt)("inlineCode",{parentName:"a"},"@theme-ui/components")),", the newer version. You’ll need to update some dependencies if you’re following this now. Also, I recommend ",(0,n.kt)("a",{parentName:"p",href:"https://zeit.sh"},"ZEIT Now")," over Netlify for deployment of Next.js sites."),(0,n.kt)("h2",null,"Spelunking the codebase"),(0,n.kt)("p",null,"This is the AngelHacks codebase, open source & under MIT License (meaning you’re welcome to reuse the code any way you like, with credit), after I made the site: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/angelhacks/site/tree/a9d0e2fd8692e268834b84325c0057e5f9087a2f"},(0,n.kt)("strong",{parentName:"a"},"github.com/angelhacks/site"))),(0,n.kt)("p",null,"The two important folders are ",(0,n.kt)("inlineCode",{parentName:"p"},"pages")," & ",(0,n.kt)("inlineCode",{parentName:"p"},"components"),"—that’s where you’ll spend the vast majority of your time editing the site. Pages are written in MDX (or JSX), components in JSX (React components)."),(0,n.kt)("h3",null,"Styling"),(0,n.kt)("p",null,"How styling works is a bit complex, but once you wrap your head around the system, it’s incredibly fast to work with."),(0,n.kt)("p",null,"It starts with a theme. The theme keeps all the primary “components” of your design—all the colors & fonts, but also the amounts of spacing (margin/padding in CSS), the font sizes used, the box-shadows used, etc, all in one place. By not having colors & font sizes & friends all spread out through your codebase, you can super easily modify the look of your whole site just by changing the theme, & you’ll also have fantastic consistency in your design, because you won’t have a random colors used in just one place or the like."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Themes also open up having a light mode & a dark mode—or even more craziness, but that’s probably not a good use of your time here :) The default ",(0,n.kt)("inlineCode",{parentName:"li"},"colors")," set is the light mode, then when the dark mode is in use, the colors dynamically change to what you’ve defined in the theme."),(0,n.kt)("li",{parentName:"ul"},"You should almost never find yourself manually setting a font size or color on pages/components of the site—keep everything in your theme. Keep reading to see how to use values defined in your theme…")),(0,n.kt)("p",null,"You won’t be writing direct CSS anywhere on the site. You’ll instead see ",(0,n.kt)("inlineCode",{parentName:"p"},"sx={{")," on the components & on the pages. A quick guide to what goes inside the ",(0,n.kt)("inlineCode",{parentName:"p"},"sx")," prop:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"When you write ",(0,n.kt)("inlineCode",{parentName:"li"},"fontSize: 3")," inside ",(0,n.kt)("inlineCode",{parentName:"li"},"sx={{ … }}"),", you ",(0,n.kt)("em",{parentName:"li"},"won’t")," get the CSS ",(0,n.kt)("inlineCode",{parentName:"li"},"font-size: 3px;"),". Instead, Theme UI will look up the third font size value in your theme."),(0,n.kt)("li",{parentName:"ul"},"When you pass an array for a property like ",(0,n.kt)("inlineCode",{parentName:"li"},"fontSize"),", you’re generating CSS Media Queries for responsive styling. ",(0,n.kt)("inlineCode",{parentName:"li"},"fontSize: [3, 4, 5]")," means that on phones & screens larger than phones, the element will use the theme’s font size #3, then on tablets, theme value #4, then on laptops & larger, theme value #5. As you can see, for very little code, you can make a site that’s optimized for all screen sizes."),(0,n.kt)("li",{parentName:"ul"},"You might notice weird properties that don’t correspond to standard CSS properties, like ",(0,n.kt)("inlineCode",{parentName:"li"},"my"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"mr"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"px"),", etc. These are for margin & padding, using the theme ",(0,n.kt)("inlineCode",{parentName:"li"},"space")," scale values like font size. ",(0,n.kt)("inlineCode",{parentName:"li"},"mt")," means ",(0,n.kt)("inlineCode",{parentName:"li"},"margin-top"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"mb")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"margin-bottom"),", then ",(0,n.kt)("inlineCode",{parentName:"li"},"my")," is margin on the Y axis, so both top & bottom (full set: ",(0,n.kt)("inlineCode",{parentName:"li"},"my mx my mr mb ml"),"). The same goes for padding, its properties beginning with ",(0,n.kt)("inlineCode",{parentName:"li"},"p")," (full set: ",(0,n.kt)("inlineCode",{parentName:"li"},"py px pt pr pb pl"),")."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"bg")," sets the ",(0,n.kt)("inlineCode",{parentName:"li"},"background-color")," to one of the ",(0,n.kt)("inlineCode",{parentName:"li"},"colors")," in your theme. ",(0,n.kt)("inlineCode",{parentName:"li"},"color")," sets the text color similarly. The superpower here is that if you enable dark mode or another theme, the colors dynamically change to that theme, as defined in your theme file."),(0,n.kt)("li",{parentName:"ul"},"This is all processed by Theme UI, so ",(0,n.kt)("a",{parentName:"li",href:"https://theme-ui.com"},"check our their website")," for more details.")),(0,n.kt)("p",null,"I wrote a bit more about how styling is used at a component level ",(0,n.kt)("a",{parentName:"p",href:"https://notebook.lachlanjc.me/2019-08-15_hack_penn_site/"},"over here about the Hack Pennsylvania recap site"),"."),(0,n.kt)("h2",null,"Making your own hackathon site"),(0,n.kt)("p",null,"If I wasn’t in college with way too much to do, I’d open source a template site, but instead, I’ll give instructions on making your own site :)"),(0,n.kt)("p",null,"(Note: I like coding on ",(0,n.kt)("a",{parentName:"p",href:"https://glitch.com"},"Glitch")," because it’s cross-platform including iPads & Chromebooks, you can work with multiple people simultaneously, you can see a live preview as you work, etc. If you prefer your local dev environment, go for it!)"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Download ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/angelhacks/site/tree/a9d0e2fd8692e268834b84325c0057e5f9087a2f"},"the angelhacks/site repo"),"."),(0,n.kt)("li",{parentName:"ol"},"Clear everything out of the static folder. Your assets will be entirely unique."),(0,n.kt)("li",{parentName:"ol"},"Open ",(0,n.kt)("inlineCode",{parentName:"li"},"components/theme.js")," & change the colors & fonts. (Loading a webfont? ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/angelhacks/site/blob/master/pages/_app.js#L28"},"Do that here"),".)"),(0,n.kt)("li",{parentName:"ol"},"Rewrite all the copy on all the pages, & update the data (sponsors, team members, social media links in the footer, etc). Your event & your team & your story is unique—tell that story!"),(0,n.kt)("li",{parentName:"ol"},"Edit ",(0,n.kt)("inlineCode",{parentName:"li"},"components/meta.js")," with all your event details. This takes forever, but it’ll give you much better placement on Google.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"You’ll be listed in Google’s events section—with Windy City Hacks, our name & logo & date appeared as the first result on Google for “chicago high school hackathon.” We got a bunch of signups just from that."),(0,n.kt)("li",{parentName:"ul"},"If you haven’t made a social card, it’s the image that appears when you share a link on Slack/iMessage/Twitter etc. You want it to show your logo and/or people hacking and/or your hackathon name. See the cards I used for my events on ",(0,n.kt)("a",{parentName:"li",href:"https://lachlanjc.me"},"my portfolio site"),"."))),(0,n.kt)("li",{parentName:"ol"},"Update your README file. It’s good form to credit anyone’s work you’re using a chunk of (hi there!)."),(0,n.kt)("li",{parentName:"ol"},"Publish to GitHub. You’re using dozens & dozens of open source projects to make your site—pay it forward by opening up your code. The next person who comes along will learn from your code, & you’ll have new code in your portfolio as well."),(0,n.kt)("li",{parentName:"ol"},"Deploy on Netlify! Sign in with GitHub, then make a new site from Git, pick your repo. The config settings are: ",(0,n.kt)("inlineCode",{parentName:"li"},"npm run build")," is your build command, ",(0,n.kt)("inlineCode",{parentName:"li"},"out")," is the resulting folder. Now, whenever you commit & push to GitHub, your site will re-deploy automatically."),(0,n.kt)("li",{parentName:"ol"},"DNS time. Head to Netlify’s “domain management” section, add your domain name, then edit your DNS to point to Netlify. This can take a bit to propagate, so don’t worry if it doesn’t work immediately.")),(0,n.kt)("hr",null),(0,n.kt)("p",null,"That wraps up my hackathon site tutorial. If you have questions, DM me on Slack or email me, & I’ll update this post. & please send me what you make! If you’re looking for design feedback, the #design channel on Hack Club Slack is the best place."))}r.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-2019-09-06-making-a-hackathon-site-mdx-b31b5f654dc10fb02836.js.map