{"version":3,"sources":["webpack://@goldenglorys/notebook/./src/pages/2019-09-05_windy_city_hacks_newsletters.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"gQASaA,EAAe,GACtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,QALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,mDACA,yBAAW,aAAGC,WAAW,IACrB,KAAQ,2BADD,oBAAX,wHAEqJ,cAAIA,WAAW,KAAf,QAFrJ,+BAGA,+LACA,0CAA4B,aAAGA,WAAW,IACtC,KAAQ,0DADgB,kCAA5B,qJAGA,kBAAG,aAAGA,WAAW,IACb,KAAQ,4DACP,kBAAQA,WAAW,KAAnB,oCACL,2CACA,kCACA,mBACE,cAAIA,WAAW,MAAf,cACA,cAAIA,WAAW,MAAf,WACA,cAAIA,WAAW,MAAf,iBACA,cAAIA,WAAW,MAAf,aAEF,uCACA,QAAC,KAAD,CAAeD,QAAQ,kBACrB,mBACE,cAAIC,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,qEADQ,wBAGpB,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,qEADQ,qBAGpB,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,qEADQ,kCAKxB,kEAAoD,aAAGA,WAAW,IAC9D,KAAQ,6BADwC,WAApD,qJAGA,yCACA,oCAAsB,sBAAYA,WAAW,KAAvB,sBAAtB,qGACA,uOACA,uGACA,yJAA2I,sBAAYA,WAAW,KAAvB,mBAA3I,mJACA,mDACA,wNACA,0IACA,2CACA,qCAAuB,aAAGA,WAAW,IACjC,KAAQ,8BADW,kBAAvB,uCAEkE,aAAGA,WAAW,IAC5E,KAAQ,oBADsD,SAFlE,mHAKA,2BACE,aAAGA,WAAW,cAAd,qMAEF,oDACA,gWAAkV,sBAAYA,WAAW,KAAvB,QAAlV,mFACA,oIACA,qCACA,gKACA,oDACA,mMACA,uMACA,wCAKJJ,EAAWK,gBAAiB","file":"component---src-pages-2019-09-05-windy-city-hacks-newsletters-mdx-7db3df89a274c804c751.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Box } from 'theme-ui';\nimport { ShortcutsList } from '../components/blocks';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Windy City Hacks Newsletters`}</h1>\n    <p>{`For `}<a parentName=\"p\" {...{\n        \"href\": \"https://windyhacks.com/\"\n      }}>{`Windy City Hacks`}</a>{`, I wanted to send out custom HTML newsletters, entirely from my iPad. The process I came up with isnâ€™t necessarily `}<em parentName=\"p\">{`good`}</em>{`, but hereâ€™s how I did it.`}</p>\n    <p>{`Note: This will require significant customization if youâ€™re intending to use a similar process. Also, be prepared to spend several hours per newsletter, start to finish.`}</p>\n    <p>{`I started by using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://zurb.com/playground/responsive-email-templates\"\n      }}>{`Zurb responsive email template`}</a>{`, because CSS + emails is a horrible combination. I spent several hours updating the design to the Windy brand, testing in various clients, etc.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://2019-site.windyhacks.com/newsletters/first.html\"\n      }}><strong parentName=\"a\">{`Check out a sample newsletter`}</strong></a></p>\n    <h2>{`Writing a newsletter`}</h2>\n    <h3>{`Apps I used`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Shortcuts`}</li>\n      <li parentName=\"ul\">{`Drafts`}</li>\n      <li parentName=\"ul\">{`Working Copy`}</li>\n      <li parentName=\"ul\">{`Numbers`}</li>\n    </ul>\n    <h3>{`Shortcuts I made`}</h3>\n    <ShortcutsList mdxType=\"ShortcutsList\">\n      <ul>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://www.icloud.com/shortcuts/fb0d8b55d9014266812942c83b6fbc97\"\n          }}>{`Compose Newsletter`}</a></li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://www.icloud.com/shortcuts/af62700c88d7409ab231aa37beebcfd4\"\n          }}>{`Newsletter HTML`}</a></li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://www.icloud.com/shortcuts/21225bcd5b494ad8acf0b3272ee3dbb1\"\n          }}>{`Make Plain Text Newsletter`}</a></li>\n      </ul>\n    </ShortcutsList>\n    <p>{`I started by composing the newsletters (with `}<a parentName=\"p\" {...{\n        \"href\": \"https://matthewstanciu.me\"\n      }}>{`Matthew`}</a>{`), focusing just on what we wanted to say. (Apple Notes works great here.) Remember, the content matters a whole lot more than the formatting :)`}</p>\n    <h3>{`Composing the HTML`}</h3>\n    <p>{`I then ran the `}<inlineCode parentName=\"p\">{`Compose Newsletter`}</inlineCode>{` Shortcut, which creates a new file in Working Copy at the correct path with the basic template.`}</p>\n    <p>{`If you plug your iPad into an external display (USB-C â†’ HDMI adapter if your monitor isnâ€™t directly supported), Working Copy renders a preview of the HTML on the external display, & the code on your iPad. Fab!`}</p>\n    <p>{`Iâ€™d set up Split View with Working Copy next to Shortcuts, & Notes in Slide Over.`}</p>\n    <p>{`The next part was always super painful, because of the need to generate HTML with inline styles. For each line of text, Iâ€™d run the `}<inlineCode parentName=\"p\">{`Newsletter HTML`}</inlineCode>{` Shortcut, fill out whatever options, & paste into the Working Copy editor. Inline formatting like bold or links must be handled individually.`}</p>\n    <h3>{`Generating a plain text copy`}</h3>\n    <p>{`Sending plain text alongside your HTML email is good form. Unfortunately, I couldnâ€™t just use the original text, because Iâ€™d always edit it while making the HTML version/reading it in my client.`}</p>\n    <p>{`Select all the HTML in the Working Copy editor, Share â†’ Shortcuts â†’ Make Plain Text Newsletter, then edit in Drafts.`}</p>\n    <h2>{`Sending a newsletter`}</h2>\n    <p>{`If youâ€™re using `}<a parentName=\"p\" {...{\n        \"href\": \"https://hackclub.com/bank/\"\n      }}>{`Hack Club Bank`}</a>{`, Hack Club has an installation of `}<a parentName=\"p\" {...{\n        \"href\": \"https://sendy.co\"\n      }}>{`Sendy`}</a>{`, which is honestly the best newsletter software Iâ€™ve ever used. Highly recommend it over MailChimp & friends.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: Iâ€™ve previously tried TinyLetter for a hackathon, but if anyone replies to your email with an attachment (like their signed waiver form), you canâ€™t see the attachment. This is a big no.`}</p>\n    </blockquote>\n    <h3>{`Generating the recipient list`}</h3>\n    <p>{`Our attendees were stored in Airtable, so I did whatever relevant filtering there, then exported a CSV. (This is only available via the website because Airtableâ€™s iPad app sucks, but the website is becoming more usable via iPadOS). Then Iâ€™d open the CSV in Numbers to manipulate the columns (renaming the emergency contact name to `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`, deleting unused columns, etc), re-export as CSV, & upload the list to Sendy.`}</p>\n    <p>{`This is super tiresome, but there wasnâ€™t a clear pattern to automate, & CSV is rough to automate in Shortcuts.`}</p>\n    <h3>{`Sending it out`}</h3>\n    <p>{`This part is pretty simple! Paste the plain text & HTML into Sendyâ€™s editor. Theyâ€™ve got options for scheduling, sending test emails, etc.`}</p>\n    <h3>{`Test your newsletter. Always!`}</h3>\n    <p>{`Never, ever send out a newsletter without sending yourself a test copy, sometimes several, first. I would undoubtedly discover a typo, need to make an edit, find a bug, etc.`}</p>\n    <p>{`I hope this was somewhat useful. Itâ€™s not a recommendation to use this system, merely documentation of what I did if you wanted to recreate it for your own hackathon, club, etc.`}</p>\n    <p>{`Happy emailing! ðŸ’Œ`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}