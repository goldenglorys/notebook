{"version":3,"sources":["webpack://@goldenglorys/notebook/./src/pages/2021-02-01_nextjs_analytics_are_still_a_handy_mvp.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uPAOaA,EAAe,GACtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,QALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,8DACA,wBAAU,aAAGC,WAAW,IACpB,KAAQ,0BADF,gBAAV,qCAE8D,aAAGA,WAAW,IACxE,KAAQ,gCADkD,qBAF9D,mOAKA,kWACA,mBACE,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,wBADQ,gCAApB,2DAGA,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,wBADQ,kCAApB,mDAGA,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,wBADQ,iCAApB,8CAGA,cAAIA,WAAW,OAAK,aAAGA,WAAW,KAC9B,KAAQ,wBADQ,2BAApB,0DAGA,cAAIA,WAAW,MAAf,yFAEF,wNACA,kBAAG,eAAKA,WAAW,IACf,IAAO,yJACP,IAAO,gDAEX,uZACA,0oBACA,mBACE,cAAIA,WAAW,MAAf,qDAAyE,sBAAYA,WAAW,MAAvB,sBAAzE,oBAA4J,sBAAYA,WAAW,MAAvB,oBAC5J,cAAIA,WAAW,MAAf,gBAAoC,sBAAYA,WAAW,MAAvB,mBAApC,QAAwG,sBAAYA,WAAW,MAAvB,WAAxG,2BACA,cAAIA,WAAW,MAAf,kGACA,cAAIA,WAAW,MAAf,qDAAyE,sBAAYA,WAAW,MAAvB,SAAzE,cACE,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAf,iCAAqD,sBAAYA,WAAW,MAAvB,SAArD,2CAAkJ,sBAAYA,WAAW,MAAvB,SAAlJ,qBAGJ,cAAIA,WAAW,MAAf,yEAA6F,aAAGA,WAAW,KACvG,KAAQ,kEADiF,qBAG7F,cAAIA,WAAW,MAAf,wFACA,cAAIA,WAAW,MAAf,6DAAiF,aAAGA,WAAW,KAC3F,KAAQ,gDADqE,kBAInF,+QACA,kBAAG,eAAKA,WAAW,IACf,IAAO,gHACP,IAAO,sCAEX,oKACA,wNAA0M,aAAGA,WAAW,IACpN,KAAQ,6EAD8L,gBAA1M,mHAGA,kBAAG,eAAKA,WAAW,IACf,IAAO,sFACP,IAAO,oCAEX,wXACA,qYAAuX,eAAKA,WAAW,IACnY,GAAM,YACL,aAAGA,WAAW,MACb,KAAQ,QACR,UAAa,gBAFd,MAFL,0dAMA,qNAAuM,aAAGA,WAAW,IACjN,KAAQ,wBAD2L,UAAvM,OAE0B,aAAGA,WAAW,IACpC,KAAQ,yBADc,aAF1B,qEAI2F,aAAGA,WAAW,IACrG,KAAQ,+CAD+E,qBAJ3F,4EAM0G,kBAAQA,WAAW,KAAnB,aAN1G,iDAMwM,aAAGA,WAAW,IAClN,KAAQ,0EAD4L,mBANxM,2dASA,kNAEA,eACE,UAAa,cAEb,cAAIA,WAAW,SACf,cAAIA,WAAW,QACb,cAAIA,WAAW,KACb,GAAM,QADR,8UAEiV,aAAGA,WAAW,KAC3V,KAAQ,WACR,UAAa,oBAFgU,SASzVJ,EAAWK,gBAAiB","file":"component---src-pages-2021-02-01-nextjs-analytics-are-still-a-handy-mvp-mdx-717d23c25747b29486f1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Next.js Analytics are still a handy MVP`}</h1>\n    <p>{`At `}<a parentName=\"p\" {...{\n        \"href\": \"http://nextjs.org/conf\"\n      }}>{`Next.js Conf`}</a>{` last October, Vercel introduced `}<a parentName=\"p\" {...{\n        \"href\": \"https://nextjs.org/analytics\"\n      }}>{`Next.js Analytics`}</a>{`, their $10/mo addon on Vercel for measuring Core Web Vitals on your Next.js app. After using it for a few months, it’s certainly useful, but I wish Vercel would push it further, as it doesn’t feel anywhere near must-have.`}</p>\n    <p>{`Once you enable them for a project, Next.js Analytics are added directly into your site during deployment, no code changes needed. Compared to adding other types of analytics libraries, even when they have Next or Gatsby plugins to simplify the process, it’s refreshingly simple. Once enabled, Vercel collects basic measurements of:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://web.dev/fcp/\"\n        }}>{`First Contentful Paint (FCP)`}</a>{`: time to first rendered element (optimally <1 second)`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://web.dev/lcp/\"\n        }}>{`Largest Contentful Paint (LCP)`}</a>{`: loading performance (optimally <2.5 seconds)`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://web.dev/cls/\"\n        }}>{`Cumulative Layout Shift (CLS)`}</a>{`: visual stability score (optimally <0.1)`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://web.dev/fid/\"\n        }}>{`First Input Delay (FID)`}</a>{`: time to interactivity (optimally <100 milliseconds)`}</li>\n      <li parentName=\"ul\">{`Vercel’s “Real Experience Score” (RES), an aggregate of these other four statistics`}</li>\n    </ul>\n    <p>{`You can filter by (recent) timescales, mobile/desktop, & the percentile experience. (The website is unfortunately slow to load—a major outlier among most Vercel interactions—but totally usable.)`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://res.craft.do/user/preview/ed1a5d33-35bf-4add-9806-36a24cb98e5e/doc/20CF2AA8-D386-4D8C-BF6B-B6ECE0EB97BA/8E9EE4A4-34F9-4567-8723-2D9A0B60B131_1\",\n        \"alt\": \"Screenshot of Next.js Analytics dashboard\"\n      }}></img></p>\n    <p>{`The best word I have to describe Next.js Analytics is “handy.” I don’t find them to be $10/month useful for personal projects, but they do provide data that’s not super easy to collect any other way. It’s certainly uniquely 2020-era frontend-focused; in past years it never felt like we as an industry had real emphasis on metrics measuring the precise responsiveness of our frontends.`}</p>\n    <p>{`A few months after their introduction, they still feel like a massive, mostly unexplored, opportunity for vertical integration for Vercel. I would love to get way more detailed, Next.js-specific “Next Steps” (pun intended). Unless you’re facing crippling performance issues sometime, typically as a web developer, you just learn more about making things performant over time & experience; there’s no great place to find a checklist of exactly what’s wrong with your website without working with someone more experienced. An automated version of this would be an essential tool. A few suggestions it could relatively easily make:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If you’re consistently fetching the same data in `}<inlineCode parentName=\"li\">{`getServerSideProps`}</inlineCode>{`, suggest using `}<inlineCode parentName=\"li\">{`getStaticProps`}</inlineCode></li>\n      <li parentName=\"ul\">{`If you have `}<inlineCode parentName=\"li\">{`getInitialProps`}</inlineCode>{` in `}<inlineCode parentName=\"li\">{`_app.js`}</inlineCode>{`, suggest alternatives`}</li>\n      <li parentName=\"ul\">{`If you’re using a popular CSS-in-JS library without server-rendering the CSS, link to a guide`}</li>\n      <li parentName=\"ul\">{`If you have over-sized images, suggest using the `}<inlineCode parentName=\"li\">{`Image`}</inlineCode>{` component`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If you’re using a responsive `}<inlineCode parentName=\"li\">{`Image`}</inlineCode>{` component at a small size without the `}<inlineCode parentName=\"li\">{`sizes`}</inlineCode>{` prop, suggest`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If one component/dependency is ballooning your bundle sizes, suggest `}<a parentName=\"li\" {...{\n          \"href\": \"https://web.dev/code-splitting-with-dynamic-imports-in-nextjs/\"\n        }}>{`dynamic loading`}</a></li>\n      <li parentName=\"ul\">{`If you’re prefetching dozens of pages, suggest disabling those where it makes sense`}</li>\n      <li parentName=\"ul\">{`If one component is repeatedly rendering slowly, suggest `}<a parentName=\"li\" {...{\n          \"href\": \"https://epicreact.dev/memoization-and-react/\"\n        }}>{`memoization`}</a></li>\n    </ul>\n    <p>{`The dashboard also doesn’t show the code making significant contributions to your scores. This is unlike, oddly enough, Vercel’s free Lighthouse integration, which points you in the right direction toward improving your scores on these very metrics:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://res.craft.do/user/preview/ed1a5d33-35bf-4add-9806-36a24cb98e5e/CDA5E882-9A53-4BC2-9E64-77E300C7A975_1\",\n        \"alt\": \"Screenshot of Next.js Analytics\"\n      }}></img></p>\n    <p>{`(Using the source maps to link back to the exact line of the React component on GitHub would be an amazing power-up vs the rendered DOM here.)`}</p>\n    <p>{`The dashboard itself feels a bit rushed in design execution. Using icons instead of a drop-down menu for device selection, for example, would make it faster to switch. (Vercel says they’re using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/lancedikson/bowser/blob/master/src/parser-platforms.js\"\n      }}>{`this library`}</a>{` for device detection, but since iPadOS reports itself as a Mac, the “Tablet” category isn’t really accurate.)`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://cloud-3dy7386t6.vercel.app/2021-02-01_wkf9e38u1cwb7m4y6gazvugbqa7jbtqy.jpeg\",\n        \"alt\": \"Screenshot of device dropdown\"\n      }}></img></p>\n    <p>{`There’s also a “Pages” section below these graphs, but even months into using it on decently high-traffic sites, it fails to collect data from most pages besides the homepage across all my projects. There’s also little UI bugs like not supporting clicking the expansion triangles with the iPad trackpad, & the graphs I don’t find especially enlightening.`}</p>\n    <p>{`“Next.js Analytics” also feels mis-branded. Next.js is an open source framework you can host anywhere, while Next.js Analytics is anything but. I have no problem with this—similar to the way AirPods work with any computer but have additional functionalities & better experience used with Apple devices, Next.js should continue to work anywhere but work best on Vercel.`}<sup parentName=\"p\" {...{\n        \"id\": \"fnref-1\"\n      }}><a parentName=\"sup\" {...{\n          \"href\": \"#fn-1\",\n          \"className\": \"footnote-ref\"\n        }}>{`1`}</a></sup>{` It’s beneficial both for Vercel & for users of the framework, who would otherwise be limited to functionality it makes sense to build directly into the framework. “Vercel Analytics” therefore feels like a more natural name, one which easily spans a multitude of other frameworks. Projects using Create React App or Redwood.js that use client-side rendering might need to track these metrics even more closely, so I hope they continue to expand beyond Next.js & Gatsby.`}</p>\n    <p>{`Additionally, the service is providing frontend performance monitoring, not traditional analytics. (A name like “Vercel Vitals” might make more sense?) Though I’ve recently been enjoying both `}<a parentName=\"p\" {...{\n        \"href\": \"http://usefathom.com\"\n      }}>{`Fathom`}</a>{` & `}<a parentName=\"p\" {...{\n        \"href\": \"https://plausible.io/\"\n      }}>{`Plausible`}</a>{` Analytics for simple traffic monitoring, the ease of turning on `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.netlify.com/products/analytics/\"\n      }}>{`Netlify Analytics`}</a>{` (a similar process to Next’s) but offered by Vercel would be brilliant `}<strong parentName=\"p\">{`alongside`}</strong>{` this. Netlify Analytics unfortunately isn’t `}<a parentName=\"p\" {...{\n        \"href\": \"https://css-tricks.com/comparing-data-in-google-and-netlify-analytics/\"\n      }}>{`accurate enough`}</a>{` (while traditional client-side services like Google Analytics undercount users, especially in the tech market, since its tracking code is commonly blocked, Netlify overcounts by not filtering out traffic from bots & scrapers). A Vercel service for privacy-minded, no-code, simple analytics that use a combination of server-side & client-side tracking to get accurate numbers would be a dream. (Add-on services seem like a natural & lucrative path for the company, too.)`}</p>\n    <p>{`I’m hopeful for the future that Vercel will expand Next.js Analytics with some of these ideas. For now, it’s a handy MVP for monitoring your Core Web Vitals that remains full of potential.`}</p>\n\n    <div {...{\n      \"className\": \"footnotes\"\n    }}>\n      <hr parentName=\"div\"></hr>\n      <ol parentName=\"div\">\n        <li parentName=\"ol\" {...{\n          \"id\": \"fn-1\"\n        }}>{`Next.js Image Optimization & Next.js Commerce, the other flagship features announced at Next.js Conf, fully deserve their names, since they’re open source. Next.js Image Optimization is a perfect example of working anywhere but working best on Vercel—there’s no configuration necessary, it’s just super fast & easy out of the box.`}<a parentName=\"li\" {...{\n            \"href\": \"#fnref-1\",\n            \"className\": \"footnote-backref\"\n          }}>{`↩`}</a></li>\n      </ol>\n    </div>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}