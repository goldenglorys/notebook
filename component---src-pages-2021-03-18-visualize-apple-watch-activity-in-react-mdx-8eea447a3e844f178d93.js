(self.webpackChunk_goldenglorys_notebook=self.webpackChunk_goldenglorys_notebook||[]).push([[9559],{4639:function(e,t,a){"use strict";a.r(t),a.d(t,{_frontmatter:function(){return i},default:function(){return p}});var n=a(9756),o=(a(7294),a(4983)),s=a(1566),r=a(4311),i={},l={_frontmatter:i};function p(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,o.kt)("wrapper",Object.assign({},l,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",null,"Visualizing Apple Watch Activity with React"),(0,o.kt)("p",null,"Apple Watch ",(0,o.kt)("a",{parentName:"p",href:"https://www.apple.com/watch/close-your-rings/"},"tracks your physical activity")," throughout the day with a series of concentric rings, the data for which is saved to the Health app on your iPhone. Last year, for my ",(0,o.kt)("a",{parentName:"p",href:"https://2019.lachlanjc.com/activity"},"2019 in Review"),", I wanted to visualize my activity rings on the web."),(0,o.kt)("p",null,"This article will guide you through exporting the data using ",(0,o.kt)("a",{parentName:"p",href:"https://support.apple.com/guide/shortcuts/welcome/ios"},"Shortcuts")," on your iPhone, then using my ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/"},"React")," component to render the rings on a website."),(0,o.kt)("h2",null,"Saving activity data as JSON"),(0,o.kt)("p",null,"I built a shortcut called ",(0,o.kt)("a",{parentName:"p",href:"https://www.icloud.com/shortcuts/29a9cf0990fd46be9e90322f8c5f9b8a"},(0,o.kt)("strong",{parentName:"a"},"Activity Export")),". It uses ",(0,o.kt)("a",{parentName:"p",href:"https://apps.apple.com/us/app/toolbox-pro-for-shortcuts/id1476205977?uo=4"},"Toolbox Pro for Shortcuts")," for accessing the data & ",(0,o.kt)("a",{parentName:"p",href:"https://apps.apple.com/us/app/jayson/id1447750768?uo=4"},"Jayson")," for previewing/saving the JSON (both of which are on my ",(0,o.kt)("a",{parentName:"p",href:"https://notebook.lachlanjc.com/tools/#i-pad-apps"},"essential iOS apps list"),"), so you’ll want to grab those from the App Store if you haven’t used them before."),(0,o.kt)(r.O1,{my:4,mdxType:"AppGrid"},(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://apps.apple.com/us/app/toolbox-pro-for-shortcuts/id1476205977?uo=4"},(0,o.kt)("img",{parentName:"a",src:"https://is1-ssl.mzstatic.com/image/thumb/Purple114/v4/b9/10/ec/b910ec11-d018-73f4-e1c2-a5bf382636c4/source/512x512bb.png",alt:"Toolbox Pro for Shortcuts"})," Toolbox Pro")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://apps.apple.com/us/app/jayson/id1447750768?uo=4"},(0,o.kt)("img",{parentName:"a",src:"https://is4-ssl.mzstatic.com/image/thumb/Purple114/v4/9a/92/26/9a922686-45e3-4239-faeb-77d4bc6bebfe/source/512x512bb.png",alt:"Jayson"})," Jayson")))),(0,o.kt)(s.zx,{as:"a",children:"Download Shortcut",href:"https://www.icloud.com/shortcuts/29a9cf0990fd46be9e90322f8c5f9b8a",mdxType:"Button"}),(0,o.kt)("p",null,"Breaking down the shortcut:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"First, we run Toolbox Pro’s ",(0,o.kt)("strong",{parentName:"li"},"Get activity data")," action, which asks for the start & end dates. When run, it will prompt you to enter the two dates. I’ve limited the results to 365 since I wanted one year of results."),(0,o.kt)("li",{parentName:"ol"},"Next, we loop through each item—in this case, one day of activity rings."),(0,o.kt)("li",{parentName:"ol"},'Since the daily goal for each ring is user-customizable, the React component accepts the progress of each ring as a prop in the form of a number from 0-1—which means we need to divide the daily progress by the goal to get each number. We perform that calculation for each ring (“Energy" is Move, then Exercise Minutes & Stand Hours), rounding each one to the thousandths place.'),(0,o.kt)("li",{parentName:"ol"},"We make a ",(0,o.kt)("strong",{parentName:"li"},"Dictionary")," (a JSON object, essentially) with each of the three values."),(0,o.kt)("li",{parentName:"ol"},"In text, we make a row of the JSON file with the repeat item’s Date, formatted as ISO, without the time."),(0,o.kt)("li",{parentName:"ol"},"We add that line to a variable called Lines, which will comprise the file contents."),(0,o.kt)("li",{parentName:"ol"},"After the loop is finished, we combine the Lines variable with comma separators & nest it inside ",(0,o.kt)("kbd",null,"{}")," to make it one big JSON object."),(0,o.kt)("li",{parentName:"ol"},"We save the JSON to iCloud & preview it using ",(0,o.kt)("strong",{parentName:"li"},"Jayson"),", prompting for the filename to use.")),(0,o.kt)("p",null,"Due to the complexity, the shortcut can take several minutes to run if you’re exporting an entire year of results, but you can just watch it go to work! Afterwards, it should open Jayson, where you can explore the results."),(0,o.kt)("h2",null,"The Rings React component"),(0,o.kt)("p",null,"(This component uses ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/vercel/styled-jsx"},"styled-jsx"),", which is built into ",(0,o.kt)("a",{parentName:"p",href:"https://nextjs.org"},"Next.js"),", but you can use the same CSS with whatever styling solution you prefer.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"filename=components/rings.js",filename:"components/rings.js"},'const dash = (n) => `${n * 100}, 100`\n\nconst Rings = ({\n  move = 0.5,\n  exercise = 0.75,\n  stand = 0.875,\n  size = 72,\n  ...props\n}) => (\n  <svg\n    viewBox="0 0 36 36"\n    width={size}\n    height={size}\n    className="rings"\n    {...props}\n  >\n    <g className="move">\n      <circle strokeWidth={3} r={16} className="background" />\n      <circle\n        strokeWidth={3}\n        r={16}\n        className="completed"\n        strokeDasharray={dash(move)}\n      />\n    </g>\n    <g className="exercise">\n      <circle strokeWidth={4} r={16} className="background" />\n      <circle\n        strokeWidth={4}\n        r={16}\n        className="completed"\n        strokeDasharray={dash(exercise)}\n      />\n    </g>\n    <g className="stand">\n      <circle strokeWidth={6} r={16} className="background" />\n      <circle\n        strokeWidth={6}\n        r={16}\n        className="completed"\n        strokeDasharray={dash(stand)}\n      />\n    </g>\n    <style jsx>{`\n      .rings {\n        --move: #fa114f;\n        --exercise: #92e82a;\n        --stand: #1eeaef;\n      }\n      .rings g {\n        transform-origin: 50%;\n      }\n      .rings circle {\n        fill: none;\n        transform: translateX(50%) translateY(50%);\n      }\n      .background {\n        opacity: 0.25;\n      }\n      .completed {\n        stroke-linecap: round;\n      }\n      .move {\n        stroke: var(--move);\n        transform: scale(1) rotate(-90deg);\n      }\n      .exercise {\n        stroke: var(--exercise);\n        transform: scale(0.75) rotate(-90deg);\n      }\n      .stand {\n        stroke: var(--stand);\n        transform: scale(0.5) rotate(-90deg);\n      }\n    `}</style>\n  </svg>\n)\n\nexport default Rings\n')),(0,o.kt)("p",null,"As mentioned, this component uses numbers from 0-1 for the progress of each ring. To render the component, pass each decimal value like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"<Rings move={0.75} exercise={0.66} stand={0.5} />\n")),(0,o.kt)("p",null,"How does it work internally? Inspired by the technique in ",(0,o.kt)("a",{parentName:"p",href:"https://www.chilitime.design/2018/09/ActivityRings/"},"this article"),", it uses 6 circles, two for each ring."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"It renders an SVG at the size passed by the ",(0,o.kt)("inlineCode",{parentName:"li"},"size")," prop, which is 72px by default."),(0,o.kt)("li",{parentName:"ul"},"For each ring, it makes a group, using the ",(0,o.kt)("inlineCode",{parentName:"li"},"<g>")," tag, with two ",(0,o.kt)("inlineCode",{parentName:"li"},"<circle>"),"s inside. The colors are set using ",(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/--*"},"CSS custom properties")," defined at the top, which I extracted from Apple’s website."),(0,o.kt)("li",{parentName:"ul"},"The first circle is the background of the ring. The CSS has ",(0,o.kt)("inlineCode",{parentName:"li"},"opacity: 25%;")," to make these fade into the background."),(0,o.kt)("li",{parentName:"ul"},"The second circle is the progress itself. It has no fill, only a stroke (border around the circle, essentially), which is dashed. However, there’s only one segment of the dashed line, whose “width” is set to the ring’s percentage full. The line cap, or the shape at the end of the line, is set to rounded."),(0,o.kt)("li",{parentName:"ul"},"All the circles are centered in the CSS, then each ring is scaled: 100% for the move ring, 75% for exercise, 50% for stand, so they appear concentric instead of next to one another.")),(0,o.kt)("h2",null,"Rendering the rings"),(0,o.kt)("p",null,"Now, bring the file we just generated into your React project, & save the Rings component above into a file. On your main page, import the JSON file & the Rings component, then map each row of the activity to a Rings component, like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"filename=pages/index.js",filename:"pages/index.js"},"import React from 'react'\nimport activity from '../activity.json'\nimport Rings from '../components/rings'\n\nconst Page = () => (\n  <ol>\n    {Object.keys(activity).map((date) => (\n      <li key={date}>\n        <Rings {...activity[date]} title={date} />\n      </li>\n    ))}\n  </ol>\n)\n\nexport default Page\n")),(0,o.kt)("p",null,"If you want a React environment with sample data set up, open & fork this CodeSandbox:"),(0,o.kt)(r.Xs,{id:"react-rings-starter-p1pjl",file:"/pages/index.js",mdxType:"CodeSandbox"}),(0,o.kt)("p",null,"If you want to jazz it up, show the dates & add some styling:"),(0,o.kt)(r.Xs,{id:"react-rings-example-857k3",file:"/pages/index.js",mdxType:"CodeSandbox"}),(0,o.kt)("h2",null,"You did it!"),(0,o.kt)("p",null,"Indeed. After I first wrote this component, I made ",(0,o.kt)("a",{parentName:"p",href:"https://rings.now.sh"},"this prototype website")," to try them with real data, which is ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lachlanjc/rings"},"open source here"),"."),(0,o.kt)(r.cx,{src:"https://rings.now.sh",mdxType:"Embed"}),(0,o.kt)("p",null,"For my 2019 in Review page, I wanted to format the rings in a yearlong calendar, delineated by month. I used some ",(0,o.kt)("a",{parentName:"p",href:"https://lodash.com/"},"Lodash methods")," & ",(0,o.kt)("a",{parentName:"p",href:"https://css-tricks.com/snippets/css/complete-guide-grid/"},"CSS Grid")," (via ",(0,o.kt)("a",{parentName:"p",href:"https://theme-ui.com/"},"Theme UI"),"), which you can ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lachlanjc/2019/blob/main/components/activity/rings.js"},"check out here"),"."),(0,o.kt)("h2",null,"Relevant resources"),(0,o.kt)("p",null,"The app didn’t exist yet when I started the 2019 in Review, but ",(0,o.kt)("a",{parentName:"p",href:"https://apps.apple.com/us/app/health-auto-export-to-csv/id1115567069"},"Health Auto Export")," looks handy. They wrote a ",(0,o.kt)("a",{parentName:"p",href:"https://www.healthexportapp.com/blog/automate-apple-health-exports-using-shortcuts"},"post about using Shortcuts Automations")," to regularly back up your Activity data, which may be useful."),(0,o.kt)("p",null,"If you want to level up from a single static export, also check out Maxime Heckel’s ",(0,o.kt)("a",{parentName:"p",href:"https://blog.maximeheckel.com/posts/build-personal-health-api-shortcuts-serverless/"},"post on using Shortcuts Automations + Serverless")," to make a GraphQL-accessible live database of all Health metrics. There’s a ",(0,o.kt)("a",{parentName:"p",href:"https://leerob.io/blog/backend"},"multitude of backend options")," to which you can store your data, & ",(0,o.kt)("a",{parentName:"p",href:"https://www.datasketch.es/"},"infinite ways")," to visualize it :)"),(0,o.kt)("p",null,"If you make anything with this, please send it my way! Links below. I’d be delighted to see it."))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-2021-03-18-visualize-apple-watch-activity-in-react-mdx-8eea447a3e844f178d93.js.map